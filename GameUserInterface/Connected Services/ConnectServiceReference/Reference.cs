//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GameUserInterface.ConnectServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ConnectServiceReference.IConnectService")]
    public interface IConnectService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnectService/ConnectToServer", ReplyAction="http://tempuri.org/IConnectService/ConnectToServerResponse")]
        bool ConnectToServer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnectService/ConnectToServer", ReplyAction="http://tempuri.org/IConnectService/ConnectToServerResponse")]
        System.Threading.Tasks.Task<bool> ConnectToServerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnectService/DisconnectFromServer", ReplyAction="http://tempuri.org/IConnectService/DisconnectFromServerResponse")]
        void DisconnectFromServer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnectService/DisconnectFromServer", ReplyAction="http://tempuri.org/IConnectService/DisconnectFromServerResponse")]
        System.Threading.Tasks.Task DisconnectFromServerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnectService/GetConnectedUsersCount", ReplyAction="http://tempuri.org/IConnectService/GetConnectedUsersCountResponse")]
        int GetConnectedUsersCount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnectService/GetConnectedUsersCount", ReplyAction="http://tempuri.org/IConnectService/GetConnectedUsersCountResponse")]
        System.Threading.Tasks.Task<int> GetConnectedUsersCountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnectService/SetFirstPanzerAmounts", ReplyAction="http://tempuri.org/IConnectService/SetFirstPanzerAmountsResponse")]
        void SetFirstPanzerAmounts(int[] amounts);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnectService/SetFirstPanzerAmounts", ReplyAction="http://tempuri.org/IConnectService/SetFirstPanzerAmountsResponse")]
        System.Threading.Tasks.Task SetFirstPanzerAmountsAsync(int[] amounts);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnectService/SetSecondPanzerAmounts", ReplyAction="http://tempuri.org/IConnectService/SetSecondPanzerAmountsResponse")]
        void SetSecondPanzerAmounts(int[] amounts);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnectService/SetSecondPanzerAmounts", ReplyAction="http://tempuri.org/IConnectService/SetSecondPanzerAmountsResponse")]
        System.Threading.Tasks.Task SetSecondPanzerAmountsAsync(int[] amounts);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnectService/IsSecondReady", ReplyAction="http://tempuri.org/IConnectService/IsSecondReadyResponse")]
        bool IsSecondReady();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnectService/IsSecondReady", ReplyAction="http://tempuri.org/IConnectService/IsSecondReadyResponse")]
        System.Threading.Tasks.Task<bool> IsSecondReadyAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnectService/GetCurrentGameObjects", ReplyAction="http://tempuri.org/IConnectService/GetCurrentGameObjectsResponse")]
        string GetCurrentGameObjects();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnectService/GetCurrentGameObjects", ReplyAction="http://tempuri.org/IConnectService/GetCurrentGameObjectsResponse")]
        System.Threading.Tasks.Task<string> GetCurrentGameObjectsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnectService/SetFirstPlayerKeyboardState", ReplyAction="http://tempuri.org/IConnectService/SetFirstPlayerKeyboardStateResponse")]
        void SetFirstPlayerKeyboardState(GameLibrary.Scripts.RemoteKeyboardControlScripts.RemoteKeyboardState keyboard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnectService/SetFirstPlayerKeyboardState", ReplyAction="http://tempuri.org/IConnectService/SetFirstPlayerKeyboardStateResponse")]
        System.Threading.Tasks.Task SetFirstPlayerKeyboardStateAsync(GameLibrary.Scripts.RemoteKeyboardControlScripts.RemoteKeyboardState keyboard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnectService/SetSecondPlayerKeyboardState", ReplyAction="http://tempuri.org/IConnectService/SetSecondPlayerKeyboardStateResponse")]
        void SetSecondPlayerKeyboardState(GameLibrary.Scripts.RemoteKeyboardControlScripts.RemoteKeyboardState keyboard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnectService/SetSecondPlayerKeyboardState", ReplyAction="http://tempuri.org/IConnectService/SetSecondPlayerKeyboardStateResponse")]
        System.Threading.Tasks.Task SetSecondPlayerKeyboardStateAsync(GameLibrary.Scripts.RemoteKeyboardControlScripts.RemoteKeyboardState keyboard);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IConnectServiceChannel : GameUserInterface.ConnectServiceReference.IConnectService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConnectServiceClient : System.ServiceModel.ClientBase<GameUserInterface.ConnectServiceReference.IConnectService>, GameUserInterface.ConnectServiceReference.IConnectService {
        
        public ConnectServiceClient() {
        }
        
        public ConnectServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ConnectServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConnectServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConnectServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool ConnectToServer() {
            return base.Channel.ConnectToServer();
        }
        
        public System.Threading.Tasks.Task<bool> ConnectToServerAsync() {
            return base.Channel.ConnectToServerAsync();
        }
        
        public void DisconnectFromServer() {
            base.Channel.DisconnectFromServer();
        }
        
        public System.Threading.Tasks.Task DisconnectFromServerAsync() {
            return base.Channel.DisconnectFromServerAsync();
        }
        
        public int GetConnectedUsersCount() {
            return base.Channel.GetConnectedUsersCount();
        }
        
        public System.Threading.Tasks.Task<int> GetConnectedUsersCountAsync() {
            return base.Channel.GetConnectedUsersCountAsync();
        }
        
        public void SetFirstPanzerAmounts(int[] amounts) {
            base.Channel.SetFirstPanzerAmounts(amounts);
        }
        
        public System.Threading.Tasks.Task SetFirstPanzerAmountsAsync(int[] amounts) {
            return base.Channel.SetFirstPanzerAmountsAsync(amounts);
        }
        
        public void SetSecondPanzerAmounts(int[] amounts) {
            base.Channel.SetSecondPanzerAmounts(amounts);
        }
        
        public System.Threading.Tasks.Task SetSecondPanzerAmountsAsync(int[] amounts) {
            return base.Channel.SetSecondPanzerAmountsAsync(amounts);
        }
        
        public bool IsSecondReady() {
            return base.Channel.IsSecondReady();
        }
        
        public System.Threading.Tasks.Task<bool> IsSecondReadyAsync() {
            return base.Channel.IsSecondReadyAsync();
        }
        
        public string GetCurrentGameObjects() {
            return base.Channel.GetCurrentGameObjects();
        }
        
        public System.Threading.Tasks.Task<string> GetCurrentGameObjectsAsync() {
            return base.Channel.GetCurrentGameObjectsAsync();
        }
        
        public void SetFirstPlayerKeyboardState(GameLibrary.Scripts.RemoteKeyboardControlScripts.RemoteKeyboardState keyboard) {
            base.Channel.SetFirstPlayerKeyboardState(keyboard);
        }
        
        public System.Threading.Tasks.Task SetFirstPlayerKeyboardStateAsync(GameLibrary.Scripts.RemoteKeyboardControlScripts.RemoteKeyboardState keyboard) {
            return base.Channel.SetFirstPlayerKeyboardStateAsync(keyboard);
        }
        
        public void SetSecondPlayerKeyboardState(GameLibrary.Scripts.RemoteKeyboardControlScripts.RemoteKeyboardState keyboard) {
            base.Channel.SetSecondPlayerKeyboardState(keyboard);
        }
        
        public System.Threading.Tasks.Task SetSecondPlayerKeyboardStateAsync(GameLibrary.Scripts.RemoteKeyboardControlScripts.RemoteKeyboardState keyboard) {
            return base.Channel.SetSecondPlayerKeyboardStateAsync(keyboard);
        }
    }
}
